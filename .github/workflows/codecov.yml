name: CodeCov

on:
  push:
    branches:
      - master
  pull_request:
    # always run on pull requests

jobs:
  codecoverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Check secrets presence
        id: checksecrets
        shell: bash
        run: |
          if [ "CODECOV_TOKEN" == "" ]; then
            echo ::set-output name=secretspresent::false
          else
            echo ::set-output name=secretspresent::true
          fi
        env:
          SNAPCRAFT_LOGIN_FILE: ${{ secrets.CODECOV_TOKEN }}
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - uses: actions/cache@v1
        name: Restore gradle chache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        name: Restore gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew    
      - name: Update test coverage metrics
        if: ${{ steps.checksecrets.outputs.secretspresent }}
        run: xvfb-run --auto-servernum ./gradlew jacocoTestReport && bash <(curl -s https://codecov.io/bash);
        env:
          CI: "true"
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          DBMS: "postgresql"
